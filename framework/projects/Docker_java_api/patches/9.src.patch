diff --git a/src/main/java/com/amihaiemil/docker/Execs.java b/src/main/java/com/amihaiemil/docker/Execs.java
index 08e9ad2..1cf2611 100644
--- a/src/main/java/com/amihaiemil/docker/Execs.java
+++ b/src/main/java/com/amihaiemil/docker/Execs.java
@@ -32,19 +32,5 @@ package com.amihaiemil.docker;
  * @version $Id$
  * @since 0.0.12
  */
-public interface Execs {
-
-    /**
-     * Get the Exec with the specified ID.
-     * @param execId The ID of the searched Exec.
-     * @return Exec.
-     */
-    Exec get(final String execId);
-
-    /**
-     * Return the Docker engine where these Execs came from.
-     * @return Docker.
-     */
-    Docker docker();
-
+public interface Execs extends Iterable<Exec> {
 }
diff --git a/src/main/java/com/amihaiemil/docker/RtDocker.java b/src/main/java/com/amihaiemil/docker/RtDocker.java
index 575c36d..ba5ac37 100644
--- a/src/main/java/com/amihaiemil/docker/RtDocker.java
+++ b/src/main/java/com/amihaiemil/docker/RtDocker.java
@@ -123,9 +123,9 @@ abstract class RtDocker implements Docker {
 
     @Override
     public final Execs execs() {
-        return new RtExecs(
-            URI.create(this.baseUri.toString() + "/exec"),
-            this
+        throw new UnsupportedOperationException(
+            "Exec API is not yet implemented. If you can contribute please,"
+            + " do it here: https://www.github.com/amihaiemil/docker-java-api"
         );
     }
 
diff --git a/src/main/java/com/amihaiemil/docker/RtExecs.java b/src/main/java/com/amihaiemil/docker/RtExecs.java
deleted file mode 100644
index e5834eb..0000000
--- a/src/main/java/com/amihaiemil/docker/RtExecs.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/**
- * Copyright (c) 2018-2020, Mihai Emil Andronache
- * All rights reserved.
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are met:
- * 1)Redistributions of source code must retain the above copyright notice,
- * this list of conditions and the following disclaimer.
- * 2)Redistributions in binary form must reproduce the above copyright notice,
- * this list of conditions and the following disclaimer in the documentation
- * and/or other materials provided with the distribution.
- * 3)Neither the name of docker-java-api nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- */
-package com.amihaiemil.docker;
-
-import java.net.URI;
-
-/**
- * RESTful Execs API.
- * @author Mihai Andronache (amihaiemil@gmail.com)
- * @version $Id$
- * @since 0.0.12
- */
-final class RtExecs implements Execs {
-
-    /**
-     * Base URI for Images API.
-     */
-    private final URI baseUri;
-
-    /**
-     * Docker API.
-     */
-    private final Docker docker;
-
-    /**
-     * Ctor.
-     * @param uri The URI for this Images API.
-     * @param dkr The docker entry point.
-     * @checkstyle ParameterNumber (10 lines)
-     */
-    RtExecs(final URI uri, final Docker dkr) {
-        this.baseUri = uri;
-        this.docker = dkr;
-    }
-
-    @Override
-    public Exec get(final String execId) {
-        return null;
-    }
-
-    @Override
-    public Docker docker() {
-        return this.docker;
-    }
-}
