diff --git a/src/test/java/com/jcabi/github/mock/MkIssueTest.java b/src/test/java/com/jcabi/github/mock/MkIssueTest.java
index 64e9df6b..b18cefe0 100644
--- a/src/test/java/com/jcabi/github/mock/MkIssueTest.java
+++ b/src/test/java/com/jcabi/github/mock/MkIssueTest.java
@@ -30,10 +30,8 @@
 package com.jcabi.github.mock;
 
 import com.jcabi.github.Coordinates;
-import com.jcabi.github.Github;
 import com.jcabi.github.Issue;
 import com.jcabi.github.Label;
-import com.jcabi.github.Repo;
 import java.util.Collections;
 import javax.json.Json;
 import org.hamcrest.CustomMatcher;
@@ -46,7 +44,6 @@ import org.mockito.Mockito;
  * Test case for {@link MkIssue}.
  * @author Yegor Bugayenko (yegor@tpc2.com)
  * @version $Id$
- * @checkstyle MultipleStringLiterals (500 lines)
  */
 public final class MkIssueTest {
 
@@ -186,33 +183,6 @@ public final class MkIssueTest {
         );
     }
 
-    /**
-     * MkIssue can remember it's author.
-     *
-     * @throws Exception when a problem occurs.
-     */
-    @Test
-    public void canRememberItsAuthor() throws Exception {
-        final MkGithub first = new MkGithub("first");
-        final Github second = first.relogin("second");
-        final Repo repo = first.repos().create(
-            Json.createObjectBuilder().add("name", "test").build()
-        );
-        final int number = second.repos()
-            .get(repo.coordinates())
-            .issues()
-            .create("", "")
-            .number();
-        final Issue issue = first.repos()
-            .get(repo.coordinates())
-            .issues()
-            .get(number);
-        MatcherAssert.assertThat(
-            new Issue.Smart(issue).author().login(),
-            Matchers.is("second")
-        );
-    }
-
     /**
      * Create an issue to work with.
      * @return Issue just created
