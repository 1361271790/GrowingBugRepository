diff --git a/src/main/java/com/jcabi/github/mock/MkMilestone.java b/src/main/java/com/jcabi/github/mock/MkMilestone.java
deleted file mode 100644
index 81fc9037..00000000
--- a/src/main/java/com/jcabi/github/mock/MkMilestone.java
+++ /dev/null
@@ -1,121 +0,0 @@
-/**
- * Copyright (c) 2012-2013, JCabi.com
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met: 1) Redistributions of source code must retain the above
- * copyright notice, this list of conditions and the following
- * disclaimer. 2) Redistributions in binary form must reproduce the above
- * copyright notice, this list of conditions and the following
- * disclaimer in the documentation and/or other materials provided
- * with the distribution. 3) Neither the name of the jcabi.com nor
- * the names of its contributors may be used to endorse or promote
- * products derived from this software without specific prior written
- * permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
- * NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
- * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
- * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
- * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
- * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
- * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
- * OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-package com.jcabi.github.mock;
-
-import com.jcabi.github.Coordinates;
-import com.jcabi.github.Milestone;
-import com.jcabi.github.Repo;
-import java.io.IOException;
-import javax.json.JsonObject;
-
-/**
- * Mock Github milestone.
- * @author Mihai Andronache (amihaiemil@gmail.com)
- * @version $Id$
- * @checkstyle MultipleStringLiterals (500 lines)
- */
-public final class MkMilestone implements Milestone {
-
-    /**
-     * Storage.
-     */
-    private final transient MkStorage storage;
-
-    /**
-     * Login of the user logged in.
-     */
-    private final transient String self;
-
-    /**
-     * Repo name.
-     */
-    private final transient Coordinates coords;
-
-    /**
-     * The number of the MkMilestone.
-     */
-    private final transient int code;
-
-    /**
-     * MkMilestone constructor.
-     * @param strg The storage
-     * @param login The user to login with
-     * @param crds The repo
-     * @param num The number of the MkMilestone
-     * @checkstyle ParameterNumber (5 lines)
-     */
-    MkMilestone(
-        final MkStorage strg, final String login, final Coordinates crds,
-        final int num
-    ) {
-        this.self = login;
-        this.coords = crds;
-        this.storage = strg;
-        this.code = num;
-    }
-
-    @Override
-    public int compareTo(final Milestone milestone) {
-        assert this.self != null;
-        assert this.coords != null;
-        assert this.storage != null;
-        assert this.code != -1;
-        throw new UnsupportedOperationException(
-            "This method is not implemented yet."
-        );
-    }
-
-    @Override
-    public JsonObject json() throws IOException {
-        throw new UnsupportedOperationException(
-            "Unimplemented operation."
-        );
-    }
-
-    @Override
-    public void patch(final JsonObject json) throws IOException {
-        throw new UnsupportedOperationException(
-            "This operation is not available yet."
-        );
-    }
-
-    @Override
-    public Repo repo() {
-        throw new UnsupportedOperationException(
-            "This is not available yet"
-        );
-    }
-
-    @Override
-    public int number() {
-        return this.code;
-    }
-
-}
diff --git a/src/main/java/com/jcabi/github/mock/MkMilestones.java b/src/main/java/com/jcabi/github/mock/MkMilestones.java
index c00dfb64..26d5f29b 100644
--- a/src/main/java/com/jcabi/github/mock/MkMilestones.java
+++ b/src/main/java/com/jcabi/github/mock/MkMilestones.java
@@ -88,22 +88,19 @@ public final class MkMilestones implements Milestones {
 
     @Override
     public Milestone create(final String title) throws IOException {
-        final int number;
-        number = 1 + this.storage.xml().xpath(
-            String.format("%s/milestone/number/text()", this.xpath())
-        ).size();
-        this.storage.apply(
-            new Directives().xpath(this.xpath()).add("milestone")
-                .add("title").set(title).up()
-                .add("state").set(Milestone.OPEN_STATE).up()
-                .add("description").set("mock milestone").up()
+        throw new UnsupportedOperationException(
+            "This method hasn't been implemented yet"
         );
-        return this.get(number);
     }
 
     @Override
     public Milestone get(final int number) {
-        return new MkMilestone(this.storage, this.self, this.coords, number);
+        assert this.self != null;
+        assert this.storage != null;
+        assert this.coords != null;
+        throw new UnsupportedOperationException(
+            "This method has not been implemented yet."
+        );
     }
 
     @Override
@@ -119,15 +116,4 @@ public final class MkMilestones implements Milestones {
             "This operation is not available yet."
         );
     }
-
-    /**
-     * XPath of this element in XML tree.
-     * @return XPath
-     */
-    private String xpath() {
-        return String.format(
-            "/github/repos/repo[@coords='%s']/milestones",
-            this.coords
-        );
-    }
 }
