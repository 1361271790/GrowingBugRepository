diff --git a/src/test/java/org/locationtech/spatial4j/context/jts/JtsSpatialContextTest.java b/src/test/java/org/locationtech/spatial4j/context/jts/JtsSpatialContextTest.java
index 1c6551c0..eb1ffe97 100644
--- a/src/test/java/org/locationtech/spatial4j/context/jts/JtsSpatialContextTest.java
+++ b/src/test/java/org/locationtech/spatial4j/context/jts/JtsSpatialContextTest.java
@@ -8,31 +8,25 @@
 
 package org.locationtech.spatial4j.context.jts;
 
-import org.locationtech.jts.geom.Geometry;
-import org.locationtech.jts.geom.GeometryFactory;
 import org.locationtech.spatial4j.shape.jts.JtsGeometry;
 import org.locationtech.jts.geom.GeometryCollection;
 import org.locationtech.jts.geom.Polygon;
 import org.junit.Test;
-import org.locationtech.spatial4j.shape.jts.JtsShapeFactory;
 import org.locationtech.spatial4j.util.Geom;
 
-import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
 public class JtsSpatialContextTest {
 
     @Test
     public void testDatelineRule() {
-        // rectangle enclosing the dateline
         Polygon polygon = Geom.build().points(-179, -90, 179, -90, 179, 90, -179, 90).toPolygon();
 
         JtsSpatialContextFactory factory = new JtsSpatialContextFactory();
         factory.datelineRule = DatelineRule.width180;
+
         JtsSpatialContext ctx = factory.newSpatialContext();
-        final Polygon polygonCloned = polygon.copy();
-        JtsGeometry shp = ctx.makeShape(polygonCloned);
-        assertEquals("shouldn't be modified after calling makeShape", polygon, polygonCloned);
+        JtsGeometry shp = ctx.makeShape((Polygon) polygon.clone());
         assertTrue(shp.getGeom() instanceof GeometryCollection);
 
         factory.datelineRule = DatelineRule.none;
@@ -40,26 +34,4 @@ public class JtsSpatialContextTest {
         shp = ctx.makeShape(polygon);
         assertTrue(shp.getGeom() instanceof Polygon);
     }
-
-    @Test
-    public void testDatelineRuleWithMultiPolygon() {
-        JtsSpatialContext ctx = new JtsSpatialContextFactory().newSpatialContext();
-        JtsShapeFactory shapeFactory = ctx.getShapeFactory();
-        GeometryFactory geomFactory = shapeFactory.getGeometryFactory();
-
-        // rectangle enclosing the dateline
-        Polygon poly1Geom = Geom.build().points(-179, -90, 179, -90, 179, 90, -179, 90).toPolygon();
-        // simple triangle
-        Polygon poly2Geom = Geom.build().points(0, 0, 1, 1, 1, 0, 0, 0).toPolygon();
-
-        GeometryCollection geomColl = geomFactory.createGeometryCollection(
-                new Geometry[]{poly1Geom, poly2Geom});
-        JtsGeometry jtsGeometry = shapeFactory.makeShape(geomColl);
-        // one of them is split; other is unchanged
-        assertEquals("MULTIPOLYGON (" +
-                "((-180 -90, -180 90, -179 90, -179 -90, -180 -90)), " +
-                "((179 90, 180 90, 180 -90, 179 -90, 179 90)), " +
-                "((0 0, 1 1, 1 0, 0 0))" +
-                ")", jtsGeometry.toString());
-    }
 }
