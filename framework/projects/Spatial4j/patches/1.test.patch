diff --git a/src/test/java/org/locationtech/spatial4j/io/jackson/SimpleJacksonTest.java b/src/test/java/org/locationtech/spatial4j/io/jackson/SimpleJacksonTest.java
index b5ab6074..26a7d064 100644
--- a/src/test/java/org/locationtech/spatial4j/io/jackson/SimpleJacksonTest.java
+++ b/src/test/java/org/locationtech/spatial4j/io/jackson/SimpleJacksonTest.java
@@ -8,60 +8,43 @@
 
 package org.locationtech.spatial4j.io.jackson;
 
-import com.fasterxml.jackson.annotation.JsonInclude;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.fasterxml.jackson.databind.SerializationFeature;
 import org.junit.Test;
-import org.locationtech.jts.geom.Coordinate;
 import org.locationtech.spatial4j.context.jts.JtsSpatialContext;
 import org.locationtech.spatial4j.shape.RandomizedShapeTest;
-import org.locationtech.spatial4j.shape.jts.JtsShapeFactory;
+import org.locationtech.spatial4j.util.GeomBuilder;
 
 import java.io.IOException;
 
-import static org.junit.Assert.assertEquals;
-
 public class SimpleJacksonTest extends RandomizedShapeTest {
 
   public SimpleJacksonTest() {
     super(JtsSpatialContext.GEO);
   }
-
+  
   @Test
-  public void testReadWriteShapeAsGeoJSON() throws IOException {
+  public void testReadWrite() throws IOException {
+
+    GeomBuilder builder = new GeomBuilder();
+    
     ObjectWithGeometry obj = new ObjectWithGeometry();
     obj.name = "Hello";
-    obj.shape = ctx.getShapeFactory().pointXY(11,12); // Spatial4j type
+    obj.shape = randomPointIn(ctx.getWorldBounds());
     obj.geo = null; //
-
+    
     ObjectMapper mapper = new ObjectMapper();
     mapper.enable(SerializationFeature.INDENT_OUTPUT);
     mapper.registerModule(new ShapesAsGeoJSONModule());
-
+//    mapper.registerModule(new ShapesAsWKTModule());
+    
     String json = mapper.writeValueAsString(obj);
-
+    
+    System.out.println( json );
+    
     ObjectWithGeometry out = mapper.readValue(json, ObjectWithGeometry.class);
-    assertEquals(obj.shape, out.shape);
-  }
-
-  @Test
-  public void testReadWriteJtsAsWKT() throws IOException {
-    final JtsShapeFactory shapeFactory = ((JtsSpatialContext) ctx).getShapeFactory();
-
-    ObjectWithGeometry obj = new ObjectWithGeometry();
-    obj.name = "Hello";
-    obj.shape = null;
-    obj.geo = shapeFactory.getGeometryFactory().createPoint(new Coordinate(11, 12)); // JTS type
-
-    ObjectMapper objectMapper = new ObjectMapper();
-    objectMapper.registerModule(new ShapesAsWKTModule());
-    objectMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);
-
-    String json = objectMapper.writeValueAsString(obj);
-
-    assertEquals("{\"name\":\"Hello\",\"geo\":\"POINT (11 12)\"}", json);
 
-    ObjectWithGeometry deserialized = objectMapper.readValue(json, ObjectWithGeometry.class);
-    assertEquals(obj.geo, deserialized.geo);
+    System.out.println( ">> AFTER <<" );
+    System.out.println( mapper.writeValueAsString(out) );
   }
 }
