diff --git a/src/test/java/xades4j/production/SignerEPESTest.java b/src/test/java/xades4j/production/SignerEPESTest.java
index ca355da..2627ed8 100644
--- a/src/test/java/xades4j/production/SignerEPESTest.java
+++ b/src/test/java/xades4j/production/SignerEPESTest.java
@@ -17,15 +17,9 @@
 package xades4j.production;
 
 import java.io.ByteArrayInputStream;
-import java.util.Arrays;
-import java.util.Collection;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.junit.runners.Parameterized;
-import org.junit.runners.Parameterized.Parameter;
-import org.junit.runners.Parameterized.Parameters;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 import xades4j.properties.IdentifierType;
@@ -38,32 +32,14 @@ import xades4j.providers.SignaturePolicyInfoProvider;
  *
  * @author Lu√≠s
  */
-@RunWith(Parameterized.class)
 public class SignerEPESTest extends SignerTestBase
 {
-    @Parameter(0)
-    public String locationUrl;
-    @Parameter(1)
-    public String output;
+    private SignaturePolicyInfoProvider policyInfoProvider;
 
-    @Parameters
-    public static Collection<Object[]> data() {
-        Object[][] data = new Object[][] { 
-            { "http://www.example.com/policy", "document.signed.epes_1.xml" },
-            { null, "document.signed.epes_2.xml" }};
-        return Arrays.asList(data);
-    }
-
-    @Test
-    public void testSignEPES() throws Exception
+    @Before
+    public void setUp() throws Exception
     {
-        System.out.printf("signEPES: %s", locationUrl);
-        System.out.println();
-
-        Document doc = getTestDocument();
-        Element elemToSign = doc.getDocumentElement();
-        
-        SignaturePolicyInfoProvider policyInfoProvider = new SignaturePolicyInfoProvider()
+        policyInfoProvider = new SignaturePolicyInfoProvider()
         {
             @Override
             public SignaturePolicyBase getSignaturePolicy()
@@ -71,13 +47,28 @@ public class SignerEPESTest extends SignerTestBase
                 return new SignaturePolicyIdentifierProperty(
                         new ObjectIdentifier("oid:/1.2.4.0.9.4.5", IdentifierType.OIDAsURI, "Policy description"),
                         new ByteArrayInputStream("Test policy input stream".getBytes()))
-                    .withLocationUrl(locationUrl);
+                    .withLocationUrl("http://www.example.com/policy");
             }
         };
+    }
+
+    @After
+    public void tearDown()
+    {
+    }
+
+    @Test
+    public void testSignEPES() throws Exception
+    {
+        System.out.println("signEPES");
+
+        Document doc = getTestDocument();
+
+        Element elemToSign = doc.getDocumentElement();
 
-        SignerEPES signer = (SignerEPES) new XadesEpesSigningProfile(keyingProviderMy, policyInfoProvider).newSigner();
+        SignerEPES signer = (SignerEPES)new XadesEpesSigningProfile(keyingProviderMy, policyInfoProvider).newSigner();
         new Enveloped(signer).sign(elemToSign);
 
-        outputDocument(doc, output);
+        outputDocument(doc, "document.signed.epes.xml");
     }
 }
diff --git a/src/test/java/xades4j/verification/XadesVerifierImplTest.java b/src/test/java/xades4j/verification/XadesVerifierImplTest.java
index b15111a..bfde690 100644
--- a/src/test/java/xades4j/verification/XadesVerifierImplTest.java
+++ b/src/test/java/xades4j/verification/XadesVerifierImplTest.java
@@ -171,20 +171,11 @@ public class XadesVerifierImplTest extends VerifierTestBase
     }
 
     @Test
-    public void testVerifyEPES1() throws Exception
+    public void testVerifyEPES() throws Exception
     {
-        System.out.println("verifyEPES 1");
+        System.out.println("verifyEPES");
         verificationProfile.withPolicyDocumentProvider(VerifierTestBase.policyDocumentFinder);
-        XAdESForm f = verifySignature("document.signed.epes_1.xml", verificationProfile);
-        assertEquals(XAdESForm.EPES, f);
-    }
-    
-    @Test
-    public void testVerifyEPES2() throws Exception
-    {
-        System.out.println("verifyEPES 2");
-        verificationProfile.withPolicyDocumentProvider(VerifierTestBase.policyDocumentFinder);
-        XAdESForm f = verifySignature("document.signed.epes_2.xml", verificationProfile);
+        XAdESForm f = verifySignature("document.signed.epes.xml", verificationProfile);
         assertEquals(XAdESForm.EPES, f);
     }
 
