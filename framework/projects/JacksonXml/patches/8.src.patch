diff --git a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
index 2f7d526e..9c7a4fbf 100644
--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
@@ -145,7 +145,7 @@ public abstract class XmlBeanSerializerBase extends BeanSerializerBase
         }
 
         final int attrCount = _attributeCount;
-        final boolean isAttribute = xgen._nextIsAttribute;
+        boolean isAttribute = xgen._nextIsAttribute;
         if (attrCount > 0) {
             xgen.setNextIsAttribute(true);
         }
@@ -176,9 +176,8 @@ public abstract class XmlBeanSerializerBase extends BeanSerializerBase
                 }
             }
             if (_anyGetterWriter != null) {
                 // For [#117]: not a clean fix, but with @JsonTypeInfo, we'll end up
                 // with accidental attributes otherwise
-                xgen.setNextIsAttribute(false);
                 _anyGetterWriter.getAndSerialize(bean, xgen, provider);
             }
         } catch (Exception e) {
@@ -218,7 +215,6 @@ public abstract class XmlBeanSerializerBase extends BeanSerializerBase
             return;
         }
 
-        final boolean isAttribute = xgen._nextIsAttribute;
         final int attrCount = _attributeCount;
         if (attrCount > 0) {
             xgen.setNextIsAttribute(true);
@@ -229,9 +225,9 @@ public abstract class XmlBeanSerializerBase extends BeanSerializerBase
         int i = 0;
         try {
             for (final int len = props.length; i < len; ++i) {
                 // 28-jan-2014, pascal: we don't want to reset the attribute flag if we are an unwrapping serializer 
                 // that started with nextIsAttribute to true because all properties should be unwrapped as attributes too.
-                if (i == attrCount && !(isAttribute && isUnwrappingSerializer())) {
+                if (i == attrCount) {
                     xgen.setNextIsAttribute(false);
                 }
                 // also: if this is property to write as text ("unwrap"), need to:
@@ -245,9 +239,8 @@ public abstract class XmlBeanSerializerBase extends BeanSerializerBase
                 }
             }
             if (_anyGetterWriter != null) {
                 // For [#117]: not a clean fix, but with @JsonTypeInfo, we'll end up
                 // with accidental attributes otherwise
-                xgen.setNextIsAttribute(false);
                 _anyGetterWriter.getAndSerialize(bean, xgen, provider);
             }
         } catch (Exception e) {

