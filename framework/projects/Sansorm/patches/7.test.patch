diff --git a/src/test/java/com/zaxxer/sansorm/internal/CaseSensitiveDatabasesTest.java b/src/test/java/com/zaxxer/sansorm/internal/CaseSensitiveDatabasesTest.java
index a5ecd88..4d2ac53 100644
--- a/src/test/java/com/zaxxer/sansorm/internal/CaseSensitiveDatabasesTest.java
+++ b/src/test/java/com/zaxxer/sansorm/internal/CaseSensitiveDatabasesTest.java
@@ -283,10 +283,12 @@ public class CaseSensitiveDatabasesTest {
       assertTrue(introspected.isUpdatableColumn("DELIMITED_FIELD_NAME"));
    }
 
+   // CLARIFY Inconsistent behaviour? This behaviour is not restricted to @Id fields. Same behaviour with @Column only annotated fields.
    @Test
    public void getIdColumnNames() {
       class TestClass {
-         @Id @Column(name = "\"ID\"")
+         @Id
+         @Column(name = "\"ID\"")
          String id;
          @Id
          String Id2;
@@ -301,45 +303,12 @@ public class CaseSensitiveDatabasesTest {
       String[] idColumnNames = introspected.getIdColumnNames();
       assertTrue(idColumnNames.length == 5);
       assertEquals("\"ID\"", idColumnNames[0]);
-      assertEquals("Id2", idColumnNames[1]);
+      assertEquals("id2", idColumnNames[1]);
       assertEquals("Id3", idColumnNames[2]);
       assertEquals("id4", idColumnNames[3]);
       assertEquals("Id5", idColumnNames[4]);
    }
 
-   @Test
-   public void constistentIdSupport() {
-      class TestClass {
-         @Id
-         String Id;
-      }
-      Introspected introspected = new Introspected(TestClass.class);
-      String[] idColumnNames = introspected.getIdColumnNames();
-      assertEquals("Id", idColumnNames[0]);
-   }
-
-   @Test
-   public void getColumnsSansIds() {
-      class TestClass {
-         @Column(name = "\"COL\"")
-         String col;
-         @Column
-         String Col2;
-         @Column(name = "Col3")
-         String Col3;
-         @Column(name = "")
-         String Col4;
-      }
-      Introspected introspected = new Introspected(TestClass.class);
-
-      String[] columnsSansIds = introspected.getColumnsSansIds();
-      assertTrue(columnsSansIds.length == 4);
-      assertEquals("\"COL\"", columnsSansIds[0]);
-      assertEquals("Col2", columnsSansIds[1]); // differs from getIdColumnNames()
-      assertEquals("col3", columnsSansIds[2]);
-      assertEquals("Col4", columnsSansIds[3]);
-   }
-
    @Test
    public void insertObject() throws SQLException {
       String delimitedFieldValue = "delimited field value";
