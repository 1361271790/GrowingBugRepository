diff --git a/src/test/java/org/apache/commons/collections4/set/CompositeSetTest.java b/src/test/java/org/apache/commons/collections4/set/CompositeSetTest.java
index 1d38694f..83618c39 100644
--- a/src/test/java/org/apache/commons/collections4/set/CompositeSetTest.java
+++ b/src/test/java/org/apache/commons/collections4/set/CompositeSetTest.java
@@ -64,18 +64,6 @@ public class CompositeSetTest<E> extends AbstractSetTest<E> {
         assertTrue(set.contains("1"));
     }
 
-    @SuppressWarnings("unchecked")
-    public void testContainsAll() {
-        final CompositeSet<E> set = new CompositeSet<>(new Set[]{ buildOne(), buildTwo() });
-        assertFalse(set.containsAll(null));
-    }
-
-    @SuppressWarnings("unchecked")
-    public void testRemoveAll() {
-        final CompositeSet<E> set = new CompositeSet<>(new Set[]{ buildOne(), buildTwo() });
-        assertFalse(set.removeAll(null));
-    }
-
     @SuppressWarnings("unchecked")
     public void testRemoveUnderlying() {
         final Set<E> one = buildOne();
@@ -144,10 +132,6 @@ public class CompositeSetTest<E> extends AbstractSetTest<E> {
         final Set<E> two = buildTwo();
         final CompositeSet<E> set = new CompositeSet<>();
         set.addComposited(one, two);
-        set.addComposited((Set<E>) null);
-        set.addComposited((Set<E>[]) null);
-        set.addComposited(null, null);
-        set.addComposited(null, null, null);
         final CompositeSet<E> set2 = new CompositeSet<>(buildOne());
         set2.addComposited(buildTwo());
         assertTrue(set.equals(set2));
