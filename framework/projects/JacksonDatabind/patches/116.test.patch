diff --git a/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java b/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java
index d8cec1d59..09be5d1b0 100644
--- a/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java
+++ b/src/test/java/com/fasterxml/jackson/databind/introspect/TestPropertyConflicts.java
@@ -1,9 +1,6 @@
 package com.fasterxml.jackson.databind.introspect;
 
-import com.fasterxml.jackson.annotation.*;
-
 import com.fasterxml.jackson.core.JsonProcessingException;
-
 import com.fasterxml.jackson.databind.*;
 
 /**
@@ -65,21 +62,6 @@ public class TestPropertyConflicts extends BaseMapTest
         }
     }
 
-    // For [Issue#541]
-    static class Bean541 {
-        protected String str;
-
-        @JsonCreator
-        public Bean541(@JsonProperty("str") String str) {
-            this.str = str;
-        }
-
-        @JsonProperty("s")
-        public String getStr() {
-            return str;
-        }
-     }
-     
     /*
     /**********************************************************
     /* Test methods
@@ -128,23 +110,4 @@ public class TestPropertyConflicts extends BaseMapTest
         Infernal inf = mapper.readValue(aposToQuotes("{'stuff':'Bob'}"), Infernal.class);
         assertNotNull(inf);
     }
-
-    public void testIssue541() throws Exception {
-        final ObjectMapper mapper = new ObjectMapper();
-        mapper.disable(
-                MapperFeature.AUTO_DETECT_CREATORS,
-                MapperFeature.AUTO_DETECT_FIELDS,
-                MapperFeature.AUTO_DETECT_GETTERS,
-                MapperFeature.AUTO_DETECT_IS_GETTERS,
-                MapperFeature.AUTO_DETECT_SETTERS,
-                MapperFeature.USE_GETTERS_AS_SETTERS
-        );
-        Bean541 data = mapper.readValue("{\"str\":\"the string\"}", Bean541.class);
-        if (data == null) {
-            throw new IllegalStateException("data is null");
-        }
-        if (!"the string".equals(data.getStr())) {
-            throw new IllegalStateException("bad value for data.str");
-        }
-    }
 }
